/*Пользователь вводит размерность и элементы динамического массива из целых чисел.
1.	Создать новый динамический массив, куда поместить все значения,
которые встречаются ровно два раза в исходном массиве.
2.	Создать новый динамический массив, i - й элемент 
которого является суммой первых i элементов исходного массива, и вывести новый массив на экран.
3.	Выполнить сортировку элементов полученных массивов по убыванию значений элементов.*/
#include <iostream>
using namespace std;
void EnterArr(int n, int array[])
{
	cout << "Введите элементы массива: ";
	for (int i = 0; i < n; i++)
	{
		cin >> array[i];
	}
}
void chet(int n, int array[], int& quantity)//подсчет повторений чисел
{
	int chislo = 0, count = 0;
	for (size_t i = 0; i < n; i++)
	{
		count = 0;//пока число повторений числа равно нулю 
		chislo = array[i];//бирем итое число 
		for (size_t j = 0; j < n; j++)//бежим по массиву ища это число
		{
			if (chislo == array[j])//если число найдено то
			{
				count++;//число повторений увеличивается 
			}
		}
		if (count == 2) {//если число повторений ровно два то увеличиваем количество 
			quantity++;
		}
	}
}

void EnterArr2(int quantity, int n, int array2[], int array[])
{

	int p = 0;
	for (size_t i = 0; i < n; i++)
	{

		int count = 1;

		for (size_t j = 0; j < n; j++)
		{
			if (array[i] == array[j] && i != j)//бля ничего не понятно 
				// здесь происходит какая-то опять проверка на количество элементов 
			{
				count++; //количество повторений для каждого элемента
			}
		}
		if (count == 2)
		{
			bool agn = false;//переменная типа "лож"
			for (int j = 0; j < p; j++)
			{
				if (array2[j] == array[i])// проверяем записан ли уже элемент в новый массив до этого 
					agn = true;//если записан то наше лож становиться правдой 
			}
			if (!agn) // если в новом массиве нет текущего элемента
			{

				array2[p] = array[i];// записываем элемент
				p++;
			}
		}
	}
}

void array3Meth(int n, int array3[], int array[])
{
	//Выполнить сортировку элементов полученных массивов по убыванию значений элементов.
	int sum = 0;
	for (size_t i = 0; i < n; i++)
	{
		sum += array[i];//считает сумму и записывет в "ячейки массива"
		/* 2 (результат первого прохода)
		   5(2+3)-результат вротого прохода
		   9(2+3+4)-третьего 
		   11(2+3+4+2)-четвертого 
		*/
		array3[i] = sum;//присвоение значению сумма места в массиве 
		//2-первый элемент,5-второй, 9-третий, 11-четверный
	}
}
void sort(int array[], int n)//сортировка 
{
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n - i - 1; j++)
			if (array[j] > array[j + 1]) swap(array[j], array[j + 1]);

}


int main()
{
	setlocale(LC_ALL, "RUS");
	int n, quantity = 0;
	cout << "Введите кол-во элементов: ";
	cin >> n;
	int* array = new int[n];//создание массива на эн элементов 
	EnterArr(n, array);//ввод элементов массива 
	cout << "Введенный массив: ";
	for (size_t i = 0; i < n; i++)//выводит созданный массив на экран 
	{
		cout << array[i] << " ";
	}
	chet(n, array, quantity);
	quantity = quantity / 2;
	/*метод chet почему - то считает два раза количество(-quantity) элеметов повторяющихся в массиве, а тоесть :
	если массив: 4 5 4 5
	то
	он считает количество повторений (4-повторяется 2 раза и 5-повторяется два раза) суммарно 4
	а значит чтобы узнать сколько элементов повторяются ТОЛЬНО ДВА РАЗА
	мы делим количетсво (наше 4) на два */
	cout << endl;//обычный переход на новую строку 
	int* array2 = new int[quantity];//создание нового массива из количества (quantity)
	EnterArr2(quantity, n, array2, array);//метод записывающий в новый массив 
	cout << "Введенный массив#2: ";
	for (size_t i = 0; i < quantity; i++)//бежит и выводит то количество раз которое описано тута (quantity = quantity / 2;)
		//выводит повторяющиеся два раза элементы
	{
		cout << array2[i] << " ";
	}
	int* array3 = new int[n];//создание нового массива 
	array3Meth(n, array3, array);
	sort(array3, n);
	sort(array, n);
	cout << endl;
	cout << "Введенный массив: ";
	for (size_t i = 0; i < n; i++)//выводит отсортированный массив 
	{
		cout << array[i] << " ";
	}
	cout << endl;
	cout << "Массив 3: ";
	for (size_t i = 0; i < n; i++)//выводит первый элемент и последующий складывает и записывает в эсл элемент
		//то есть: массив: 2 3 4 2
		//выведет : 2 5(2+3) 9(2+3+4) 11(2+3+4+2)
	{
		cout << array3[i] << " ";
	}
}